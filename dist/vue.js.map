{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重写数组中的部分方法\r\n// 暂存真正数组原型对象\r\nlet oldArrayProto = Array.prototype;\r\n\r\n//  依据真实的数组原型对象，创建一个对象\r\nlet newArrayProto = Object.create(oldArrayProto);\r\n\r\n// 这些方法会修改原数组\r\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"reverse\", \"sort\", \"splice\"];\r\n\r\nmethods.forEach((method) => {\r\n  // 然后，我们在这个对象上的methods内的方法，\r\n  newArrayProto[method] = function (...args) {\r\n    // 这个this是调用方法的那个数组\r\n    // 执行我们自己的逻辑，并返回真正的方法调用的结果\r\n    const result = oldArrayProto[method].call(this, ...args);\r\n\r\n    let inserted;\r\n    // 这个就是__ob__的作用了。可以在想要的，可以获取到实例的地方，调用observe\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\":\r\n        inserted = args;\r\n        break;\r\n      case \"splice\":\r\n        inserted = args.slice(2);\r\n      default:\r\n        break;\r\n    }\r\n    // 我们只需要知道inserted，即新增的元素，绑定observe\r\n    if (inserted) {\r\n      ob.observeArray(inserted);\r\n    }\r\n    return result;\r\n  };\r\n});\r\n\r\nexport default newArrayProto;\r\n","import newArrayProto from \"./array\";\r\nclass Observer {\r\n  constructor(data) {\r\n    // data.__ob__ = this;\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false,\r\n    });\r\n    // 如果是数组的话，要做特殊处理\r\n    if (Array.isArray(data)) {\r\n      // 重写数组的方法，7个变异方法，这些方法可以修改数组本身\r\n      // 除了数组，数组内的引用类型也要劫持\r\n      data.__proto__ = newArrayProto;\r\n      // 需要保留数组原有的特性，并且可以重写部分方法\r\n      // 这个observeArray，并不是真正的数组观测的地方，真正的触发观测，是使用newArrayProto的方法时。\r\n      // 它只是为了继续观测数组的元素是否还是数组的情况\r\n      this.observeArray(data);\r\n    } else {\r\n      // 走walk\r\n      this.walk(data);\r\n    }\r\n  }\r\n  walk(data) {\r\n    // walk就是循环data中的key，然后取绑定defineProperty\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  observeArray(data) {\r\n    data.forEach((item) => {\r\n      console.log(item, \"array-item\");\r\n      observe(item);\r\n    });\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n  console.log(key, \"key\");\r\n  // 这里递归一下，如果value还是对象的话，oberve里面做了判断\r\n  observe(value);\r\n  // 这就好理解了，target就是data，\r\n  // 我们给data上的属性做了defineProperty的绑定。\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      return value;\r\n    },\r\n    set(nv) {\r\n      if (nv === value) {\r\n        return;\r\n      }\r\n      observe(nv);\r\n\r\n      value = nv;\r\n    },\r\n  });\r\n}\r\n// 接下来我们来看这个observe\r\nexport function observe(data) {\r\n  // 这个不说了吧\r\n  if (typeof data !== \"object\" || data === null) {\r\n    return;\r\n  }\r\n  // 这个东西有点意思，等会再说\r\n  if (data.__ob__ instanceof Observer) {\r\n    return data.__ob__;\r\n  }\r\n  // 返回个实例就完事了\r\n  return new Observer(data);\r\n}\r\n","import { observe } from \"./observe/index\";\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.data) {\r\n    // 我们再看初始化Data。后续这里还会有一堆初始化\r\n    initData(vm);\r\n  }\r\n}\r\n// 我们先来看proxy，其实啥也没干，就是通过defineProperty\r\n// 在vm实例上，绑定了_data，也就是data中的所有的属性，\r\n// 这样之后我们就可以直接在vm上拿到data中的数据了。\r\n// 这也是为什么我们在vue项目里，可以通过this.xxx拿到data中的xxx的原因了。\r\n// 我们来分析下proxy这个方法。\r\n// 我们传入的是vm，_data,以及_data中的key\r\nfunction proxy(vm, target, key) {\r\n  // 此时，我们给vm上绑定key\r\n  Object.defineProperty(vm, key, {\r\n    // 那么我们取值的时候，实际上是取得vm._data[key]上的值\r\n    get() {\r\n      return vm[target][key];\r\n    },\r\n    set(nv) {\r\n      // 我们设置值得时候，实际上也是给vm._data[key]上，设置值\r\n      // 这样，我们就形成了vm.xxx实际上是vm._data.xxx得代理\r\n      // 修改实例上中data内的属性，实际上就是修改了vm._data中的属性\r\n      vm[target][key] = nv;\r\n    },\r\n  });\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data;\r\n  // 这里做了一个有趣的事情，也就是说，你可以在data中有一个参数，这个参数就是vm\r\n  // 但是，会有一些神奇的事情，比如，你打印vm.name是undefined，打印vm却是有的。\r\n  // 这是为啥呢？\r\n  // 继续说，这里的data.call。就执行了data()方法，但是执行的时候，下面的observe和proxy都没执行呢，所以vm上肯定没有属性吖。\r\n  // 如果data是函数，那么就执行下，把它赋值给data变量。\r\n  data = typeof data === \"function\" ? data.call(vm, vm) : data;\r\n  vm._data = data;\r\n  // 然后，我们通过observe来观测它\r\n  observe(data);\r\n  // 然后，我们通过proxy，在vm上，绑定data中的属性\r\n  for (let key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n}\r\n","import { initState } from \"./state\";\r\nexport function initMixin(Vue) {\r\n  // 很简单，我们给Vue的原型上挂载了一个_init方法，以便我们可以在Vue类中执行。\r\n  // 这里还要注意，整个Vue都是通过在类的实例上绑定方法来通信的，然后才可以在Vue的各个地方调用\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this;\r\n    // 在vm上绑定传入的options。\r\n    vm.$options = options;\r\n    // 然后再去初始化状态\r\n    initState(vm);\r\n  };\r\n}\r\n","import { initMixin } from \"./init\";\r\n// 在没有new Vue之前，代码都是顺序，并且在一个tick中执行的。\r\n// 所以，注意这里，我们声明了一个Vue，但是，此时并没有执行new Vue。注意，我说的此时，就是js引擎执行到这里的时候。\r\nfunction Vue(options) {\r\n  // 这个this，指的的vm，也就是Vue的实例\r\n  this._init(options);\r\n}\r\n// 所以，在这里，我们引入了initMixin，并且执行了initMixin。那么我们去initMixin中看下它干了啥\r\ninitMixin(Vue);\r\nexport default Vue;\r\n"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","console","log","observe","target","get","set","nv","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA;EACA,IAAIA,aAAa,GAAGC,KAAK,CAACC,SAA1B;;EAGA,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcL,aAAd,CAApB;;EAGA,IAAIM,OAAO,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,SAAzB,EAAoC,SAApC,EAA+C,MAA/C,EAAuD,QAAvD,CAAd;EAEAA,OAAO,CAACC,OAAR,CAAgB,UAACC,MAAD,EAAY;EAC1B;EACAL,EAAAA,aAAa,CAACK,MAAD,CAAb,GAAwB,YAAmB;EAAA;;EAAA,sCAANC,IAAM;EAANA,MAAAA,IAAM;EAAA;;EACzC;EACA;EACA,QAAMC,MAAM,GAAG,yBAAAV,aAAa,CAACQ,MAAD,CAAb,EAAsBG,IAAtB,+BAA2B,IAA3B,SAAoCF,IAApC,EAAf;;EAEA,QAAIG,QAAJ,CALyC;;EAOzC,QAAIC,EAAE,GAAG,KAAKC,MAAd;;EACA,YAAQN,MAAR;EACE,WAAK,MAAL;EACA,WAAK,SAAL;EACEI,QAAAA,QAAQ,GAAGH,IAAX;EACA;;EACF,WAAK,QAAL;EACEG,QAAAA,QAAQ,GAAGH,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX;EANJ,KARyC;;;EAmBzC,QAAIH,QAAJ,EAAc;EACZC,MAAAA,EAAE,CAACG,YAAH,CAAgBJ,QAAhB;EACD;;EACD,WAAOF,MAAP;EACD,GAvBD;EAwBD,CA1BD;;MCTMO;EACJ,oBAAYC,IAAZ,EAAkB;EAAA;;EAChB;EACAd,IAAAA,MAAM,CAACe,cAAP,CAAsBD,IAAtB,EAA4B,QAA5B,EAAsC;EACpCE,MAAAA,KAAK,EAAE,IAD6B;EAEpCC,MAAAA,UAAU,EAAE;EAFwB,KAAtC,EAFgB;;EAOhB,QAAIpB,KAAK,CAACqB,OAAN,CAAcJ,IAAd,CAAJ,EAAyB;EACvB;EACA;EACAA,MAAAA,IAAI,CAACK,SAAL,GAAiBpB,aAAjB,CAHuB;EAKvB;EACA;;EACA,WAAKa,YAAL,CAAkBE,IAAlB;EACD,KARD,MAQO;EACL;EACA,WAAKM,IAAL,CAAUN,IAAV;EACD;EACF;;;;aACD,cAAKA,IAAL,EAAW;EACT;EACAd,MAAAA,MAAM,CAACqB,IAAP,CAAYP,IAAZ,EAAkBX,OAAlB,CAA0B,UAACmB,GAAD;EAAA,eAASC,cAAc,CAACT,IAAD,EAAOQ,GAAP,EAAYR,IAAI,CAACQ,GAAD,CAAhB,CAAvB;EAAA,OAA1B;EACD;;;aACD,sBAAaR,IAAb,EAAmB;EACjBA,MAAAA,IAAI,CAACX,OAAL,CAAa,UAACqB,IAAD,EAAU;EACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,YAAlB;EACAG,QAAAA,OAAO,CAACH,IAAD,CAAP;EACD,OAHD;EAID;;;;;;EAGI,SAASD,cAAT,CAAwBK,MAAxB,EAAgCN,GAAhC,EAAqCN,KAArC,EAA4C;EACjDS,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAAiB,KAAjB,EADiD;;EAGjDK,EAAAA,OAAO,CAACX,KAAD,CAAP,CAHiD;EAKjD;;EACAhB,EAAAA,MAAM,CAACe,cAAP,CAAsBa,MAAtB,EAA8BN,GAA9B,EAAmC;EACjCO,IAAAA,GADiC,iBAC3B;EACJ,aAAOb,KAAP;EACD,KAHgC;EAIjCc,IAAAA,GAJiC,eAI7BC,EAJ6B,EAIzB;EACN,UAAIA,EAAE,KAAKf,KAAX,EAAkB;EAChB;EACD;;EACDW,MAAAA,OAAO,CAACI,EAAD,CAAP;EAEAf,MAAAA,KAAK,GAAGe,EAAR;EACD;EAXgC,GAAnC;EAaD;;EAEM,SAASJ,OAAT,CAAiBb,IAAjB,EAAuB;EAC5B;EACA,MAAI,QAAOA,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;EAC7C;EACD,GAJ2B;;;EAM5B,MAAIA,IAAI,CAACJ,MAAL,YAAuBG,QAA3B,EAAqC;EACnC,WAAOC,IAAI,CAACJ,MAAZ;EACD,GAR2B;;;EAU5B,SAAO,IAAIG,QAAJ,CAAaC,IAAb,CAAP;EACD;;ECjEM,SAASkB,SAAT,CAAmBC,EAAnB,EAAuB;EAC5B,MAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB;;EACA,MAAID,IAAI,CAACpB,IAAT,EAAe;EACb;EACAsB,IAAAA,QAAQ,CAACH,EAAD,CAAR;EACD;EACF;EAED;EACA;EACA;EACA;EACA;;EACA,SAASI,KAAT,CAAeJ,EAAf,EAAmBL,MAAnB,EAA2BN,GAA3B,EAAgC;EAC9B;EACAtB,EAAAA,MAAM,CAACe,cAAP,CAAsBkB,EAAtB,EAA0BX,GAA1B,EAA+B;EAC7B;EACAO,IAAAA,GAF6B,iBAEvB;EACJ,aAAOI,EAAE,CAACL,MAAD,CAAF,CAAWN,GAAX,CAAP;EACD,KAJ4B;EAK7BQ,IAAAA,GAL6B,eAKzBC,EALyB,EAKrB;EACN;EACA;EACA;EACAE,MAAAA,EAAE,CAACL,MAAD,CAAF,CAAWN,GAAX,IAAkBS,EAAlB;EACD;EAV4B,GAA/B;EAYD;;EAED,SAASK,QAAT,CAAkBH,EAAlB,EAAsB;EACpB,MAAInB,IAAI,GAAGmB,EAAE,CAACE,QAAH,CAAYrB,IAAvB,CADoB;EAGpB;EACA;EACA;EACA;;EACAA,EAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACP,IAAL,CAAU0B,EAAV,EAAcA,EAAd,CAA7B,GAAiDnB,IAAxD;EACAmB,EAAAA,EAAE,CAACK,KAAH,GAAWxB,IAAX,CARoB;;EAUpBa,EAAAA,OAAO,CAACb,IAAD,CAAP,CAVoB;;EAYpB,OAAK,IAAIQ,GAAT,IAAgBR,IAAhB,EAAsB;EACpBuB,IAAAA,KAAK,CAACJ,EAAD,EAAK,OAAL,EAAcX,GAAd,CAAL;EACD;EACF;;EC5CM,SAASiB,SAAT,CAAmBC,GAAnB,EAAwB;EAC7B;EACA;EACAA,EAAAA,GAAG,CAAC1C,SAAJ,CAAc2C,KAAd,GAAsB,UAAUC,OAAV,EAAmB;EACvC,QAAMT,EAAE,GAAG,IAAX,CADuC;;EAGvCA,IAAAA,EAAE,CAACE,QAAH,GAAcO,OAAd,CAHuC;;EAKvCV,IAAAA,SAAS,CAACC,EAAD,CAAT;EACD,GAND;EAOD;;ECTD;;EACA,SAASO,GAAT,CAAaE,OAAb,EAAsB;EACpB;EACA,OAAKD,KAAL,CAAWC,OAAX;EACD;;;EAEDH,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}